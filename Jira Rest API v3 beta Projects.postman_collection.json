{
	"info": {
		"_postman_id": "543f3d04-1845-406f-a007-8c489b039450",
		"name": "Jira REST API v3(beta) Projects",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18934513",
		"_collection_link": "https://blue-star-687451.postman.co/workspace/28905d3f-ad68-4d15-bae4-f8059aa7a72c/collection/18934513-543f3d04-1845-406f-a007-8c489b039450?action=share&source=collection_link&creator=18934513"
	},
	"item": [
		{
			"name": "Projects Add Modify Delete",
			"item": [
				{
					"name": "Get Projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let responseBody=pm.response.json();\r",
									"// let k=parseInt(pm.globals.get(\"projectscount\"));\r",
									"// console.log(\"project count from globals var\")\r",
									"// console.log(k);\r",
									"// console.log(\"project count from response \")\r",
									"// let projectscountfromresponse=responseBody.total;\r",
									"// console.log(projectscountfromresponse);\r",
									" pm.test(\"Status code is 200 and projects retrieved\", function () {\r",
									"     pm.response.to.have.status(200);\r",
									"      pm.expect(pm.response.json().self).to.eqls(\"https://xyzacademy.atlassian.net/rest/api/3/project/search?maxResults=50&startAt=0\");\r",
									"//     pm.expect(k).to.eql(projectscountfromresponse);\r",
									" });\r",
									"//pm.expect(k).to.eql(l);\r",
									"pm.globals.set(\"projectscount\",responseBody.total);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl}}/rest/api/3/project/search",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project",
								"search"
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://your-domain.atlassian.net/rest/api/3/project/search' \\\r\n  --user 'email@example.com:<api_token>' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Create Projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let k=parseInt(pm.globals.get(\"projectscount\"));\r",
									"let s=k+1;\r",
									"console.log(\"sam\");\r",
									"console.log(s);\r",
									"let tst=pm.globals.get(\"projectKey\");\r",
									"console.log(tst);\r",
									"pm.test(\"Status code is 201 created and project key present in response \", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(pm.response.json().key).to.eql(tst);\r",
									"    pm.globals.set('projectscount', s);\r",
									"});\r",
									"  \r",
									"// {\r",
									"//     \"self\": \"https://xyzacademy.atlassian.net/rest/api/3/project/10037\",\r",
									"//     \"id\": 10037,\r",
									"//     \"key\": \"TYETW\"\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"projectKey\",\"TEAM\");\r",
									"let randomstr1=(Math.random().toString(36).slice(2,7));\r",
									"let randomstr2=randomstr1.toUpperCase();\r",
									"console.log(\"randomstr2\");\r",
									"console.log(randomstr2);\r",
									"let randomstr3=(pm.globals.get(\"projectKey\")+randomstr2);\r",
									"console.log(randomstr3);\r",
									"pm.globals.set(\"projectKey\",randomstr3);\r",
									"let smple=\"Team \"+pm.globals.get(\"projectKey\");\r",
									"pm.globals.set(\"projectname\",smple);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assigneeType\": \"PROJECT_LEAD\",\r\n  \"avatarId\": 10200,\r\n  \"categoryId\": null,\r\n  \"description\": \"Cloud migration initiative\",\r\n  \"issueSecurityScheme\": null,\r\n  \"key\": \"{{projectKey}}\",\r\n  \"leadAccountId\": \"{{accountId}}\",\r\n  \"name\": \"Team {{projectKey}}\",\r\n  \"notificationScheme\":null,\r\n  \"permissionScheme\": null,\r\n  //\"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\r\n  //\"projectTypeKey\": \"business\",\r\n  \"projectTemplateKey\":\"com.pyxis.greenhopper.jira:gh-simplified-agility-scrum\",\r\n  \"projectTypeKey\":\"software\",\r\n  \"url\": \"http://atlassian.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/rest/api/3/project",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project"
							]
						},
						"description": "Generated from cURL: curl --request POST \\\r\n  --url 'https://your-domain.atlassian.net/rest/api/3/project' \\\r\n  --user 'email@example.com:<api_token>' \\\r\n  --header 'Accept: application/json' \\\r\n  --header 'Content-Type: application/json' \\\r\n  --data '{\r\n  \"assigneeType\": \"PROJECT_LEAD\",\r\n  \"avatarId\": 10200,\r\n  \"categoryId\": 10120,\r\n  \"description\": \"Cloud migration initiative\",\r\n  \"issueSecurityScheme\": 10001,\r\n  \"key\": \"EX\",\r\n  \"leadAccountId\": \"5b10a0effa615349cb016cd8\",\r\n  \"name\": \"Example\",\r\n  \"notificationScheme\": 10021,\r\n  \"permissionScheme\": 10011,\r\n  \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\r\n  \"projectTypeKey\": \"business\",\r\n  \"url\": \"http://atlassian.com\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Get Projects Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let responseBody=pm.response.json();\r",
									"let k=parseInt(pm.globals.get(\"projectscount\"));\r",
									"console.log(\"project count from globals var\")\r",
									"console.log(k);\r",
									"console.log(\"project count from response \")\r",
									"let projectscountfromresponse=responseBody.total;\r",
									"console.log(projectscountfromresponse);\r",
									"pm.test(\"Status code is 200 and project count as expected after adding\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(k).to.eql(projectscountfromresponse);\r",
									"});\r",
									"//pm.expect(k).to.eql(l);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl}}/rest/api/3/project/search",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project",
								"search"
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://your-domain.atlassian.net/rest/api/3/project/search' \\\r\n  --user 'email@example.com:<api_token>' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Modify Projects",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//setTimeout(function(){},2000);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and modified name present in response \", function () {\r",
									"    let varr=pm.globals.get(\"projectname\");\r",
									"    let varr2=varr+\" modified name\"\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.json().name).to.eql(varr2);\r",
									"});\r",
									"\r",
									"//{{projectname}} modified name"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assigneeType\": \"PROJECT_LEAD\",\r\n  \"avatarId\":null,\r\n  \"categoryId\": null,\r\n  \"description\": \"Cloud migration initiative\",\r\n  \"issueSecurityScheme\": null,\r\n  \"key\": \"{{projectKey}}\",\r\n  \"leadAccountId\": \"5b10a0effa615349cb016cd8\",\r\n  \"name\": \"{{projectname}} modified name\",\r\n  \"notificationScheme\": null,\r\n  \"permissionScheme\": null,\r\n  \"url\": \"http://atlassian.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/rest/api/3/project/{{projectKey}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project",
								"{{projectKey}}"
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://your-domain.atlassian.net/rest/api/3/project/{projectIdOrKey}' \\\r\n  --user 'email@example.com:<api_token>' \\\r\n  --header 'Accept: application/json' \\\r\n  --header 'Content-Type: application/json' \\\r\n  --data '{\r\n  \"assigneeType\": \"PROJECT_LEAD\",\r\n  \"avatarId\": 10200,\r\n  \"categoryId\": 10120,\r\n  \"description\": \"Cloud migration initiative\",\r\n  \"issueSecurityScheme\": 10001,\r\n  \"key\": \"EX\",\r\n  \"leadAccountId\": \"5b10a0effa615349cb016cd8\",\r\n  \"name\": \"Example\",\r\n  \"notificationScheme\": 10021,\r\n  \"permissionScheme\": 10011,\r\n  \"url\": \"http://atlassian.com\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Delete Projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"    let count=parseInt(pm.globals.get(\"projectscount\"));\r",
									"    count=count-1;\r",
									"    pm.globals.set(\"projectscount\",count);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/rest/api/3/project/{{projectKey}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project",
								"{{projectKey}}"
							]
						},
						"description": "Generated from cURL: curl --request DELETE \\\r\n  --url 'https://your-domain.atlassian.net/rest/api/3/project/{projectIdOrKey}' \\\r\n  --user 'email@example.com:<api_token>'"
					},
					"response": []
				},
				{
					"name": "Get Projects Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"let responseBody=pm.response.json();\r",
									"let k=parseInt(pm.globals.get(\"projectscount\"));\r",
									"console.log(\"project count from globals var\")\r",
									"console.log(k);\r",
									"console.log(\"project count from response \")\r",
									"let projectscountfromresponse=responseBody.total;\r",
									"console.log(projectscountfromresponse);\r",
									"pm.test(\"Status code is 200 and project count as expected after delete\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(k).to.eql(projectscountfromresponse);\r",
									"});\r",
									"//pm.expect(k).to.eql(l);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl}}/rest/api/3/project/search",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project",
								"search"
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://your-domain.atlassian.net/rest/api/3/project/search' \\\r\n  --user 'email@example.com:<api_token>' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "randomstr",
			"value": ""
		},
		{
			"key": "modifiedname",
			"value": ""
		}
	]
}